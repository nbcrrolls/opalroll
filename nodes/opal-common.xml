<?xml version="1.0" standalone="no"?>

<kickstart>

        <description>
        Opal (Java)
        Automatic Web service wrappers for scientific applications on Grid resources.
        
	Run on every node which is going to be an opal-server appliance
        </description>

        <copyright>
        Copyright (c) 2000 - 2008 The Regents of the University of California.
        All rights reserved.
        </copyright>

        <changelog>
        </changelog>

        <package>apache-tomcat</package>
        <package>tomcat-connectors</package>
        <package>opal</package>
        <package>rocks-opal</package>
        <package>roll-opal-usersguide</package>
        <package>mysql</package>
        <package>mysql-server</package>

<post os="linux" arch="x86_64">

LOGFILE=/tmp/opal-install.log


#Installing java 64 bit
#needed by the libdrmaa
if [ `/opt/rocks/bin/rocks report version` == "5.4.3" ]; then
	java -version &amp;&gt; /tmp/testjavabefore
	rpm -ev --nodeps jdk.i586
	rpm -ev --nodeps jdk.x86_64
	rpm  -Uvh --force --nodeps /export/rocks/install/rolls/base/5.4.3/x86_64/RedHat/RPMS/jdk-6u26-linux.x86_64.rpm &amp;&gt; /tmp/rpminstall.log
	java -version &amp;&gt; /tmp/testjavaafter
fi

<!-- Setting up database -->
<file name="/etc/my.cnf" mode="append">

# globally configure default utf8 character set
[mysqld]
init_connect='SET collation_connection = utf8_general_ci'
init_connect='SET NAMES utf8'
default-character-set=utf8
character-set-server=utf8
character_set_client=utf8
collation-server=utf8_general_ci
skip-character-set-client-handshake
</file>

if [ ! -f /var/lock/subsys/mysqld ]; then
    /etc/init.d/mysqld start
else
    /etc/init.d/mysqld restart
fi

/sbin/chkconfig mysqld on
/usr/bin/mysqladmin create opaldb
<file name="/opt/opal/etc/opal.pass" perms="0600">
<eval>
mkpasswd -l 10 -s 0 2> /dev/null
</eval>
</file>

OPAL_DB_PASS=`cat /opt/opal/etc/opal.pass`
/bin/echo -en GRANT ALL PRIVILEGES ON opaldb.* TO 'opal'@'localhost' IDENTIFIED BY \'$OPAL_DB_PASS\' \; | /usr/bin/mysql

cp /opt/opal/etc/hibernate-opal.cfg.xml /opt/opal/etc/hibernate-opal.cfg.xml.orig
sed -i "s/opal_mysql_passwd/$OPAL_DB_PASS/" /opt/opal/etc/hibernate-opal.cfg.xml
chmod go-r /opt/opal/etc/hibernate-opal.cfg.xml
/bin/echo "DB setup completed" &gt;&gt; $LOGFILE

<!--       setting up tomcat -->

<!-- add tomcat user already done in opal-server -->

<!-- configure mod_jk -->
<file name="/etc/httpd/conf.d/mod_jk.conf">
LoadModule jk_module modules/mod_jk.so
JkWorkersFile /etc/httpd/conf/workers.properties

# Where to put jk logs
JkLogFile     /var/log/httpd/mod_jk.log

# Set the jk log level [debug/error/info]
JkLogLevel    info

# Select the log format
JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "

# JkOptions indicate to send SSL KEY SIZE,
JkOptions     +ForwardKeySize +ForwardURICompat -ForwardDirectories

# JkRequestLogFormat set the request format
JkRequestLogFormat     "%w %V %T"
</file>

<file name="/etc/httpd/conf/workers.properties">
workers.java_home=/usr/java/latest
# Define 1 real worker using ajp13
worker.list=worker1
# Set properties for worker1 (ajp13)
worker.worker1.type=ajp13
worker.worker1.host=localhost
worker.worker1.port=8009
</file>


<file name="/etc/httpd/conf.d/rocks.conf" mode="append">

JkMount /opal* worker1
JkMount /app* worker1

</file>
sed -i 's/AddHandler imap-file map/#AddHandler imap-file map/g' /etc/httpd/conf/httpd.conf
sed -i 's/AddHandler type-map var/#AddHandler type-map var/g' /etc/httpd/conf/httpd.conf

<!-- restart httpd -->
/etc/init.d/httpd restart

<!-- configure and turn on tomcat -->
/sbin/chkconfig --add tomcat-opal 
/sbin/chkconfig httpd on 


CATALINA_HOME=/opt/tomcat
ls /share/opal/opal-jobs
ln -s /share/opal/opal-jobs  $CATALINA_HOME/webapps/opal-jobs
cp /opt/opal/etc/index.html $CATALINA_HOME/webapps/opal-jobs

/bin/echo "Tomcat setup completed sucessfully " &gt;&gt; $LOGFILE


<!-- update opal.properties file -->
cp /opt/opal/etc/opal.properties /opt/opal/etc/opal.properties.orig

SERVER_NAME="&opal_public_fqdn;"
if [ "$SERVER_NAME" == "" ] ; then
	#if this is a frontend installation the 
	#opal_public_fqdn is not set yet
	SERVER_NAME="&Kickstart_PublicHostname;"
fi

#  ------  fix the opal.properties -----
#TODO this should be moved in a reconfigure section

# tomcat URL
sed -i "s/tomcat.url=.*/tomcat.url=http:\/\/$SERVER_NAME/" /opt/opal/etc/opal.properties
# stmp from
sed -i "s/mail.smtp.from=foo@bar.com/mail.smtp.from=noreply@$SERVER_NAME/" /opt/opal/etc/opal.properties



<!-- Set correct number of processors for SGE -->
#this is not gonna work on a post install script
#proc_count=0
#if test -z /opt/gridengine; then 
#    proc_count=`cat /proc/cpuinfo | grep "processor" | wc -l` 
#else
#   procs=`qstat -f | grep BIP | awk '{print $3}' | cut -d'/' -f3`
#   for i in $procs; do 
#       proc_count=$(($proc_count + $i))
#   done
#fi
#sed -i "s/num.procs=2/num.procs=$proc_count/" /opt/opal/etc/opal.properties

if test -z /opt/gridengine; then
    #no sge installed 
    #lets use fork
    proc_count=`cat /proc/cpuinfo | grep "processor" | wc -l`
    sed -i "s/num.procs=8/num.procs=$proc_count/" /opt/opal/etc/opal.properties
    sed -i "s/edu.sdsc.nbcr.opal.manager.DRMAAJobManager/edu.sdsc.nbcr.opal.manager.ForkJobManager/" /opt/opal/etc/opal.properties
fi

#this replace the libdrmaa with JNI api compiled in
if [ "&rocks_version;" == "5.4.3" -o "&rocks_version;" == "6.0" ]; then 
    echo Replacing libdrmaa &gt;&gt; $LOGFILE
    cp -pf  /opt/opal/lib/libdrmaa.so.1.0 /opt/gridengine/lib/lx26-amd64/libdrmaa.so.1.0
fi


<file name="/etc/rc.d/rocksconfig.d/post-99-opaldeploy" perms="0700">
#!/bin/bash
#


#sync the users
while [ true ]; do
        /opt/rocks/bin/411get --all
        #if tomcat is defined get out of the loop
        id tomcat &amp;&amp; break
        sleep 4
done


INSTALLLOG=/opt/opal/install.log

echo "running install opal " &gt; $INSTALLLOG

chown -R tomcat:tomcat /opt/opal
chown -R tomcat:tomcat /opt/tomcat
chown -R tomcat:tomcat /opt/tomcat-*
#it should not be running, but just in case...
/etc/init.d/tomcat-opal stop

cd /opt/opal
export JAVA_HOME=/usr/java/latest
export PATH=$JAVA_HOME/bin:$PATH
CATALINA_HOME=/opt/tomcat

/bin/su tomcat -c "/opt/rocks/bin/ant install" &gt;&gt; $INSTALLLOG 2&gt;&amp;1

<!-- Enable directory listing for job output -->
FILE=$CATALINA_HOME/conf/web.xml
pre=`cat -n $FILE  | grep listings | grep param-name | awk '{print $1}'`
num=`expr $pre + 1`
sed -i "${num} s/false/true/" $FILE

#wait tomcat to deploy opal 
/etc/init.d/tomcat-opal start
sleep 20


rm -rf /etc/rc.d/rocksconfig.d/post-99-opaldeploy 
</file>


echo "Opal setup completed sucesfully" &gt;&gt; $LOGFILE

</post>
</kickstart>
