<?xml version="1.0" standalone="no"?>

<kickstart>

        <description>
        Opal (Java)
        Frontend stuffs. Create the user and set the share for opal
        </description>

        <copyright>
        Copyright (c) 2000 - 2008 The Regents of the University of California.
        All rights reserved.
        </copyright>

        <changelog>
        </changelog>


<post os="linux" arch="x86_64">

LOGFILE=/tmp/opal-install.log


<!--       setting up tomcat -->

<!-- add tomcat user -->
/bin/mkdir -p /export/home
/usr/sbin/useradd -m -c "Tomcat" tomcat
chown -R tomcat.tomcat /opt/tomcat
chown -R tomcat.tomcat /opt/tomcat-*

/opt/rocks/bin/rocks sync users

<!-- Make NFS shared directory for opal jobs -->
mkdir -m0755 -p /export/opal/opal-jobs 
chown -R tomcat:tomcat /export/opal
<file name="/etc/auto.share" mode="append">
opal &Kickstart_PrivateHostname;:/export/&amp;
</file>

/etc/init.d/autofs restart


<!-- add cron entry to remove old jobs -->
<file name="/etc/cron.daily/opal-job-cleanup" perms="0755">
#!/bin/bash

# Removes old opal job directories older then default days

# default number of days to keep job direcotry 
n=21

JOBDIR=/share/opal/opal-jobs

if [ -d $JOBDIR ]; then
  cd $JOBDIR
  dirs=`find . -type d -name 'app*' -mtime +$n -print`
  for i in $dirs
  do
      rm -rf $i
  done
fi

# clean submit files (pbs or condor)
if [ -d /opt/tomcat/temp ] ; then
    cd /opt/tomcat/temp
    dirs=`find . -type d -name '*.submit' -mtime +$n -print`
    for i in $dirs
    do
        rm -rf $i
    done
fi

</file>

<!-- update www docs with correct hostname --> 
sed -i "s/yourservername/&Kickstart_PublicHostname;/g" /var/www/html/roll-documentation/opal/`/opt/rocks/bin/rocks report version`/*.html 
 
<!-- add link to opal reference guide --> 
ln -s /opt/opal/docs /var/www/html/roll-documentation/opal/`/opt/rocks/bin/rocks report version`/refguide 

<!--    define a opal appliance    -->
/opt/rocks/bin/rocks add appliance opal-server membership="Opal Server" public=yes os=linux node=login
/opt/rocks/bin/rocks add appliance attr opal-server attr=opal_server value=true
#let's define the opal_public_fqdn attr for the first time
/opt/rocks/bin/rocks add attr attr=opal_public_fqdn value=&Kickstart_PublicHostname;

/opt/rocks/bin/rocks add host attr localhost  attr=opal_server value=true
/opt/rocks/bin/rocks set appliance attr opal-server submit_host true
/opt/rocks/bin/rocks set appliance attr opal-server exec_host false
/opt/rocks/bin/rocks set appliance attr opal-server sge true

/opt/rocks/bin/rocks add firewall appliance=opal-server chain=INPUT \
        flags="-m state --state NEW" protocol=tcp service=www \
        action=ACCEPT network=public rulename="A40-WWW-PUBLIC-LAN" \
        rulesrc="system"


</post>

</kickstart>
