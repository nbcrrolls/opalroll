<?xml version="1.0" standalone="no"?>

<kickstart>

        <description>
        Opal (Java)
	To be used with EC2
        </description>

        <copyright>
        Copyright (c) 2000 - 2008 The Regents of the University of California.
        All rights reserved.
        </copyright>

        <changelog>
        </changelog>


<post os="linux" arch="x86_64">

/bin/touch /root/sethostname

<file name="/etc/init.d/ec2-sethostname-opal" perms="0755">
#!/bin/bash
# $Id: opal-ec2.xml,v 1.6 2012/08/24 23:55:10 nadya Exp $
#
# chkconfig: 2345 30 40
# description: ec2 ssh key access
#
. /etc/rc.d/init.d/functions

RETVAL=0

function findPublicInfo() {
x=$(curl -s -f http://169.254.169.254/latest/meta-data/public-ipv4)
if [ "$x" == "" ] ; then
   echo ""
   echo "ERROR: public IP is not available"
   exit 1
else
   publicIP=$x
fi

x=`host $publicIP | awk '{print $5}'`
if [ "$x" == "" ] ; then
   echo ""
   echo "ERROR: public hostname is not available"
   exit 1
else
   publicName=$x
fi

}

function findPrivateInfo() {
x=$(curl -s -f http://169.254.169.254/latest/meta-data/hostname)
if [ "$x" == "" ] ; then
   echo ""
   echo "ERROR: private hostname is not available"
   exit 1
else
   privateName=$x
fi

x=$(curl -s -f http://169.254.169.254/latest/meta-data/local-ipv4)
if [ "$x" == "" ] ; then
   echo ""
   echo "ERROR: private IP is not available"
   exit 1
else
   privateIP=$x
fi
}

changeName() {
	#some logging
	LOGFILE=/var/log/renameHost.log
        echo ""
	findPrivateInfo
	findPublicInfo

	#let's check if we are inside ec2
	curl http://169.254.169.254/latest/meta-data/public-hostname || exit 1;


	echo "Start `date`" > $LOGFILE

	
	#fix directories
	cd /share
	ln -s /state/partition1/opal
	#fix opal user dir
	OPALUSER=tomcat
	
	
	if [ ! -d /home/$OPALUSER ];
	then 
		mkdir /home/$OPALUSER
		chown $OPALUSER:$OPALUSER /home/$OPALUSER
	fi

	#
	# fix hosts
	#
	echo $privateIP $privateName >> /etc/hosts

	#
	# Opal
	#
	#hostname
	NewHostName=$publicName
	OldHostName=`cat /opt/opal/etc/opal.properties | grep tomcat | awk -F '//' '{print $2}'`

	echo "Replacing old host name $OldHostName with new host name $NewHostName" &gt;&gt; $LOGFILE

	#files to be modified
	files='/opt/tomcat/webapps/opal2/WEB-INF/classes/opal.properties
	/opt/opal/etc/opal.properties'

	for i in $files; do
		sed -i "s%$OldHostName%$NewHostName%g" $i
	done

	#working dir
	mkdir -p /mnt/opal/opal-job
	chown tomcat:tomcat /mnt/opal/opal-job  
	rm /opt/tomcat/webapps/opal-jobs 
	ln -s /mnt/opal/opal-job /opt/tomcat/webapps/opal-jobs


	# Now the scheduler
	#
	# Nadya Williams
	# disable previous sgemaster.$OLD_NAME stop
	echo "Running PrepSGE" >> $LOGFILE
	OLD_NAME=`grep SGE_CLUSTER_NAME /opt/gridengine/util/install_modules/sge_configuration.conf |awk -F '=' '{print $2}'`
	NEW_NAME=`hostname`
	if [ -f /etc/init.d/sgemaster.$OLD_NAME ]; then
		/etc/init.d/sgemaster.$OLD_NAME stop
		mv -f /etc/init.d/sgemaster.$OLD_NAME /root/
	fi
	if [ -f /etc/init.d/sgeexecd.$OLD_NAME ]; then
		/etc/init.d/sgeexecd.$OLD_NAME stop
		mv -f /etc/init.d/sgeexecd.$OLD_NAME /root/
	fi

	sed -i "s/$OLD_NAME/$NEW_NAME/" /opt/gridengine/util/install_modules/sge_configuration.conf
	rm -rf /opt/gridengine/default.orig-host
	mv -f /opt/gridengine/default /opt/gridengine/default.orig-host


	. /etc/profile.d/sge-binaries.sh
	
	# Setup QMaster
	cd $SGE_ROOT &amp;&amp; \
	        ./inst_sge -m -auto ./util/install_modules/sge_configuration.conf
	
	echo "$NEW_NAME.local $privateName $NEW_NAME" > $SGE_ROOT/$SGE_CELL/common/host_aliases
	
	cat default/common/configuration | sed -e "s/reporting=false/reporting=true/g" -e "s/joblog=false/joblog=true/g" &gt; /tmp/sge-default-common-config.conf
	mv -f /tmp/sge-default-common-config.conf default/common/configuration
	chown 400:400 default/common/configuration
	
	/etc/rc.d/init.d/sgemaster.$NEW_NAME start
	
	# add this node as a submit host
	$SGE_ROOT/bin/$SGE_ARCH/qconf -as $NEW_NAME \
	
	# add mpich mpi openmpi to all.q pe list
	$SGE_ROOT/bin/$SGE_ARCH/qconf -rattr queue pe_list 'make mpich mpi orte' all.q \
	
	#/opt/rocks/bin/rocks sync config
	
	echo "EXEC_HOST_LIST=\"$NEW_NAME\"" &gt;&gt; $SGE_ROOT/util/install_modules/sge_host_config.conf
	
	SET_HOST_TYPE=' -x -s '
	
	cd $SGE_ROOT &amp;&amp;  ./inst_sge -noremote $SET_HOST_TYPE -auto \
	        ./util/install_modules/sge_host_config.conf &gt; $LOGFILE 2&gt;&amp;1

}



case "$1" in
   start)
	echo -n "Changing host name"
	changeName 
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] 
	;;

  stop)
      echo -n "Changing host name (nothing to do) "
	[ $RETVAL -eq 0 ]
	;;

  restart|reload)
   	$0 stop
   	$0 start
   	RETVAL=$?
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $RETVAL

</file>

/sbin/chkconfig --add ec2-sethostname-opal
/sbin/chkconfig ec2-sethostname-opal on



<file name="/var/www/html/index.html" perms="0644">
<![CDATA[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>Your Page Title</title>
<meta http-equiv="REFRESH" content="0;url=/opal2/dashboard"></HEAD>
<BODY>
Redirecting to...
</BODY>
</HTML>
]]>
</file>


</post>

</kickstart>
